15. Write a program to implement all operations in queue(insertion and deletion). 
#include <iostream>
using namespace std;

const int MAX_SIZE = 10;
int queueArray[MAX_SIZE];
int front = -1, rear = -1;

void enqueue(int value) {
    if (rear < MAX_SIZE - 1) {
        queueArray[++rear] = value;
        if (front == -1) {
            front = 0; // Set front to 0 when inserting the first element
        }
        cout << "Element enqueued successfully.\n";
    } else {
        cout << "Queue overflow. Cannot enqueue more elements.\n";
    }
}

void dequeue() {
    if (front <= rear) {
        cout << "Dequeued element: " << queueArray[front++] << endl;
        if (front > rear) {
            // Reset front and rear when the last element is dequeued
            front = rear = -1;
        }
    } else {
        cout << "Queue underflow. Cannot dequeue from an empty queue.\n";
    }
}

void displayQueue() {
    if (front <= rear) {        
	cout << "Queue elements: ";
        for (int i = front; i <= rear; i++) {
            cout << queueArray[i] << " ";
        }
        cout << endl;
    } else {
        cout << "Queue is empty.\n";
    }
}

int main() {
    int choice, value;

    do {
        cout << "\n1. Enqueue Element\n2. Dequeue Element\n3. Display Queue\n4. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                cout << "Enter the element to enqueue: ";
                cin >> value;
                enqueue(value);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                displayQueue();
                break;
            case 4:
                cout << "Exiting the program.\n";
                break;
            default:
                cout << "Invalid choice. Please enter a valid option.\n";
        }
    } while (choice != 4);

    return 0;
}